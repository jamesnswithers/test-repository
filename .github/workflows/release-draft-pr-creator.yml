name: Release Draft PR Creator

on:
  push:
    # branches to consider in the event; optional, defaults to all
    branches:
      - release-*

jobs:
  create_draft_pr:
    name: Release Draft PR Creator
    runs-on: ubuntu-latest
    steps:
      # Runs a single command using the runners shell
      - name: Shallow Clone of Repo      
        run: |
          git clone --no-checkout https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git .

      - name: Debug
        run: |
          gh auth status
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Check existing PRs
        id: pr_check
        run: |
          target="main"
          pr_list=`gh pr list --base $target --state open --json title,number`
          pr_exists=`echo "$pr_list" | jq 'any(.[].title;. == "Draft merge of ${{ github.ref_name }} to '$target'")'`
          pr_number=`echo "$pr_list" | jq '.[] | select(.title == "Draft merge of ${{ github.ref_name }} to '$target'").number'`
          echo "##[set-output name=target;]$target"
          echo "##[set-output name=pr_exists;]$pr_exists"
          echo "##[set-output name=pr_number;]$pr_number"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Existing PR Workflow
        if: ${{ steps.pr_check.outputs.pr_exists == 'true' }}
        run: |
          echo "pr exists: [${{ steps.pr_check.outputs.pr_exists }}]"
          
          git config user.email itreleasemanagement@hastingsdirect.com
          git config user.name itreleasemanagement
          
          echo "Closing PR [${{ steps.pr_check.outputs.pr_number }}]"
          gh pr close ${{ steps.pr_check.outputs.pr_number }} --delete-branch
          
          echo "Creating branch [merge/action/${{ github.ref_name }}/${{ steps.pr_check.outputs.target }}]"
          git branch merge/action/${{ github.ref_name }}/${{ steps.pr_check.outputs.target }} origin/${{ github.ref_name }}
          git checkout merge/action/${{ github.ref_name }}/${{ steps.pr_check.outputs.target }}
          git merge origin/${{ steps.pr_check.outputs.target }}
          git push -u origin merge/action/${{ github.ref_name }}/${{ steps.pr_check.outputs.target }}
          gh pr create --body "" --title "Draft merge of ${{ github.ref_name }} to ${{ steps.pr_check.outputs.target }}" --base ${{ steps.pr_check.outputs.target }} --draft
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: New PR Workflow
        if: ${{ steps.pr_check.outputs.pr_exists == 'false' }}
        run: |
          echo "pr does not exist [${{ steps.pr_check.outputs.pr_exists }}]"
          
          git config user.email itreleasemanagement@hastingsdirect.com
          git config user.name itreleasemanagement
          
          git branch merge/action/${{ github.ref_name }}/${{ steps.pr_check.outputs.target }} origin/${{ github.ref_name }}
          git checkout merge/action/${{ github.ref_name }}/${{ steps.pr_check.outputs.target }}
          git merge origin/${{ steps.pr_check.outputs.target }}          
          git push -u origin merge/action/${{ github.ref_name }}/${{ steps.pr_check.outputs.target }}
          gh pr create --body "" --title "Draft merge of ${{ github.ref_name }} to ${{ steps.pr_check.outputs.target }}" --base ${{ steps.pr_check.outputs.target }} --draft
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
